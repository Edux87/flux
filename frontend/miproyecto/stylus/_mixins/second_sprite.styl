/*
Stylus variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon_home_width;
}

The large array-like variables contain all information about a single icon
$icon_home = x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet = width height image $spritesheet_sprites;
*/
$line_code_name = 'line_code';
$line_code_x = 137px;
$line_code_y = 0px;
$line_code_offset_x = -137px;
$line_code_offset_y = 0px;
$line_code_width = 166px;
$line_code_height = 7px;
$line_code_total_width = 303px;
$line_code_total_height = 134px;
$line_code_image = '../../../img/second_sprite.png';
$line_code = 137px 0px -137px 0px 166px 7px 303px 134px '../../../img/second_sprite.png' 'line_code';
$step_active_name = 'step_active';
$step_active_x = 0px;
$step_active_y = 0px;
$step_active_offset_x = 0px;
$step_active_offset_y = 0px;
$step_active_width = 137px;
$step_active_height = 67px;
$step_active_total_width = 303px;
$step_active_total_height = 134px;
$step_active_image = '../../../img/second_sprite.png';
$step_active = 0px 0px 0px 0px 137px 67px 303px 134px '../../../img/second_sprite.png' 'step_active';
$step_unactive_name = 'step_unactive';
$step_unactive_x = 0px;
$step_unactive_y = 67px;
$step_unactive_offset_x = 0px;
$step_unactive_offset_y = -67px;
$step_unactive_width = 137px;
$step_unactive_height = 67px;
$step_unactive_total_width = 303px;
$step_unactive_total_height = 134px;
$step_unactive_image = '../../../img/second_sprite.png';
$step_unactive = 0px 67px 0px -67px 137px 67px 303px 134px '../../../img/second_sprite.png' 'step_unactive';
$spritesheet_width = 303px;
$spritesheet_height = 134px;
$spritesheet_image = '../../../img/second_sprite.png';
$spritesheet_sprites = $line_code $step_active $step_unactive;
$spritesheet = 303px 134px '../../../img/second_sprite.png' $spritesheet_sprites;

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  spriteWidth($icon_home)
}

.icon-email {
  sprite($icon_email)
}
*/
spriteWidth($sprite) {
  width: $sprite[4];
}

spriteHeight($sprite) {
  height: $sprite[5];
}

spritePosition($sprite) {
  background-position: $sprite[2] $sprite[3];
}

spriteImage($sprite) {
  background-image: url($sprite[8]);
}

sprite($sprite) {
  spriteImage($sprite)
  spritePosition($sprite)
  spriteWidth($sprite)
  spriteHeight($sprite)
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of Stylus

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

sprites($spritesheet_sprites);
*/
sprites($sprites) {
  for $sprite in $sprites {
    $sprite_name = $sprite[9];
    .{$sprite_name} {
      sprite($sprite);
    }
  }
}
